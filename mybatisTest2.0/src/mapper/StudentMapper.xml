<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.Dao">

	<!-- 方法二 -->
	<resultMap type="bean.Student" id="StudentMap">
		<!-- property：实体类中的属性名；column:数据库中的列名。 id表示主键 result表示其他字段 -->
		<id property="studentId" column="studentid" />
		<result property="studentName" column="studentname" />
		<result property="studentAge" column="studentage" />
		<result property="studentSex" column="studentsex" />
		<result property="studentContent" column="studentcontent" />
		<!-- <result property="clzssId" column="clzssid" /> -->
		<!-- 联合班级表 -->
		<association property="clzss" column="clzssid" javaType="Clzss">
			<id property="clzssId" column="clzssid" />
			<result property="clzssName" column="clzssname" />
			<result property="clzssContent" column="clzsscontent" />
		</association>
	</resultMap>

	<!-- 方法一 -->
	<!-- parameterType是参数类型 resultType是返回值类型 <select id="selectStudent" parameterType="int" 
		resultType="bean.Student"> select * from student where studentId = #{id} 
		</select> -->

	<!-- 方法二 -->
	<!-- 查询单个学生 -->
	<select id="selectStudent" parameterType="int" resultMap="StudentMap">
		select student.studentid,student.studentName,student.studentSex,student.studentage,student.studentContent,clzss.* from student left join clzss on student.clzssid = clzss.clzssid where	student.studentid =#{id}
		<!-- select * from student where studentId = #{id} -->
	</select>
	<!-- 查询所有学生 -->
	<select id="selectAllStudents" resultMap="StudentMap"><!-- Student重命名了 -->
		select student.studentid,student.studentName,student.studentSex,student.studentage,student.studentContent,clzss.* from student left join clzss on student.clzssid = clzss.clzssid
		<!-- select * from student -->
	</select>
	<!-- 删除学生 -->
	<delete id="deleteStudent" parameterType="int">
		delete from student
		where studentId = #{id}
	</delete>
	<!-- 添加学生 -->
	<insert id="insertStudent" parameterType="Student">
		insert into student
		values(#{studentId},#{studentName},#{studentAge},#{studentSex},#{studentContent},#{clzssId})
	</insert>
	<!-- 修改学生 -->
	<update id="updateStudent" parameterType="Student">
		update student set
		studentName=#{studentName}, studentAge=#{studentAge},
		studentSex=#{studentSex}, studentContent=#{studentContent} where studentId=#{studentId}
	</update>

</mapper>